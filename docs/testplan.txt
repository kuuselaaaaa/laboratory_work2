Модуль save.cpp
Метод save

Тест #1 (noempty)

Тип: позитивный
Входные данные: файл, сожержащий 10 строк "qwerty\n"
Ожидаемый результат: line_f[i] == line_t[i], где line_f - данные из файла, а line_t - строки из txt

Тест #2 (large_strings)

Тип: позитивный
Входные данные: файл, содержащий 10 строк "qwertyqwertyqwertyqwertyqwertyqwertyqwertyqwertyqwertyqwertyqwertyqwerty\n"
Ожидаемый результат: line_f[i] == line_t[i], где line_f - данные из файла, а line_t - строки из txt

Тест #3 (empty_strings)

Тип: позитивный
Входные данные: файл, содержащий 10 строк "\n"
Ожидаемый результат: line_f[i] == line_t[i], где line_f - данные из файла, а line_t - строки из txt

Тест #4 (with_empty_strings)

Тип: позитивный
Входные данные: файл, содержащий 10 строк "qwerty\n\n"
Ожидаемый результат: line_f[i] == line_t[i], где line_f - данные из файла, а line_t - строки из txt

Тест #5 (empty)

Тип: негативынй
Входные данные: пустой файл
Ожидаемый результат: line_f == "", line_t == nullptr, где line_f - данные из файла, а line_t - строки из txt

Модуль m.cpp
Метод m

Тест #1 (begin_word)

Тип: позитивный
Входные данные: файл, содержащий 10 строк "qwerty qwert\n", курсор ставится в начале первого слова в четвертой строке
Ожидаемый результат: text == out, где text - данные, перехваченные из std::cout, а out - строки из txt, курсор стоит в начале первого слова в четвертой строке

Тест #2 (middle_word)

Тип: позитивный
Входные данные: файл, содержащий 10 строк "qwerty qwert\n", курсор ставится в середние первого слова в четвертой строке
Ожидаемый результат: text == out, где text - данные, перехваченные из std::cout, а out - строки из txt, курсор стоит в середине первого слова в четвертой строке

Тест #3 (end_word)

Тип: позитивный
Входные данные: файл, содержащий 10 строк "qwerty qwert\n", курсор ставится в конце первого слова в четвертой строке
Ожидаемый результат: text == out, где text - данные, перехваченные из std::cout, а out - строки из txt, курсор стоит в конце первого слова в четвертой строке

Тест #4 (negative_pos)

Тип: негативный
Входные данные: файл, содержащий 10 строк "qwerty qwert\n", курсор ставится в начале первого слова в четвертой строке, а затем на отрицательную позицию
Ожидаемый результат: позиция курсора не изменится, text == out, где text - данные, перехваченные из std::cout, а out - строки из txt, курсор стоит в начале первого слова в четвертой строке

Тест #5 (negative_str)

Тип: негативный
Входные данные: файл, содержащий 10 строк "qwerty qwert\n", курсор ставится в начале первого слова в четвертой строке, а затем на отрицательную строку
Ожидаемый результат: позиция курсора не изменится, text == out, где text - данные, перехваченные из std::cout, а out - строки из txt, курсор стоит в начале первого слова в четвертой строке

Тест #6 (bigger_than_len_str)

Тип: негативный
Входные данные: файл, содержащий 10 строк "qwerty qwert\n", курсор ставится на несуществующую позицию в четвертой строке
Ожидаемый результат: text == out, где text - данные, перехваченные из std::cout, а out - строки из txt, курсор стоит в конце последнего слова в четвертой строке

Тест #7 (bigger_than_str)

Тип: негативный
Входные данные: файл, содержащий 10 строк "qwerty qwert\n", курсор ставится в начале первого слова в четвертой строке, а затем на несуществующую строку 
Ожидаемый результат: позиция курсора не изменится, text == out, где text - данные, перехваченные из std::cout, а out - строки из txt, курсор стоит в начале первого слова в четвертой строке

Тест #8 (empty)

Тип: негативный
Входные данные: пустой файл, курсор ставится в нулевую позицию
Ожидаемый результат: вывод сообщения об ошибке, text == "There are already no any lines in the text!\n", где text - данные, перехваченные из std::cerr

Модуль showfirstwords.cpp
Метод showfirstwords

Тест #1 (noempty)

Тип: позитивный
Входные данные: файл, сожержащий 10 строк "qwerty qwert\n"
Ожидаемый результат: text == out, где text - данные, перехваченные из std::cout, а out - строки из txt

Тест #2 (only_first_words)

Тип: позитивный
Входные данные: файл, сожержащий 10 строк "qwerty\n"
Ожидаемый результат: text == out, где text - данные, перехваченные из std::cout, а out - строки из txt

Тест #3 (spaces_before_first_words)

Тип: позитивный
Входные данные: файл, сожержащий 10 строк "  qwerty\n"
Ожидаемый результат: text == out, где text - данные, перехваченные из std::cout, а out - строки из txt

Тест #4 (empty_strings)

Тип: позитивный
Входные данные: файл, сожержащий 10 строк "\n"
Ожидаемый результат: text == out, где text - данные, перехваченные из std::cout, а out - строки из txt

Тест #5 (one_string)

Тип: позитивный
Входные данные: файл, сожержащий 1 строку "\n"
Ожидаемый результат: text == out, где text - данные, перехваченные из std::cout, а out - строки из txt

Тест #6 (empty)

Тип: негативный
Входные данные: пустой файл
Ожидаемый результат: вывод сообщения об ошибке, text == "There are already no any lines in the text!\n", где text - данные, перехваченные из std::cerr

Модуль mwef.cpp
Метод mwef

Тест #1 (noempty)

Тип: позитивный
Входные данные: файл, содержащий 10 строк "qwerty qwert\n", курсор ставится в середине первого слова в четвертой строке
Ожидаемый результат: text == out, где text - данные, перехваченные из std::cout, а out - строки из txt, курсор переместится в конец первого слова в четвертой строке

Тест #2 (second_word)

Тип: позитивный
Входные данные: файл, содержащий 10 строк "qwerty qwert\n", курсор ставится в начале второго слова в четвертой строке
Ожидаемый результат: text == out, где text - данные, перехваченные из std::cout, а out - строки из txt, курсор переместится в конец второго слова в четвертой строке

Тест #3 (begin_word)

Тип: позитивный
Входные данные: файл, содержащий 10 строк "qwerty qwert\n", курсор ставится в начале первого слова в четвертой строке
Ожидаемый результат: text == out, где text - данные, перехваченные из std::cout, а out - строки из txt, курсор переместится в конец первого слова в четвертой строке

Тест #4 (spaces)

Тип: позитивный
Входные данные: файл, содержащий 10 строк "qwerty  qwert\n", курсор ставится между пробелами между словами в четвертой строке
Ожидаемый результат: позиция курсора не изменится, text == out, где text - данные, перехваченные из std::cout, а out - строки из txt, курсор стоит между пробелами между словами в четвертой строке

Тест #5 (empty_strings)

Тип: позитивный
Входные данные: файл, содержащий 10 строк "\n", курсор ставится на седьмую позицию в четвертой строке
Ожидаемый результат: позиция курсора не изменится, text == out, где text - данные, перехваченные из std::cout, а out - строки из txt, курсор стоит в начале четвертой строки

Тест #6 (empty)

Тип: позитивный
Входные данные: файл, сожержащий 1 строку "\n", курсор ставится в нулевую позицию
Ожидаемый результат: позиция курсора не изменится, text == out, где text - данные, перехваченные из std::cout, а out - строки из txt, курсор стоит в нулевой позиции

Модуль rn.cpp
Метод rn

Тест #1 (noempty)

Тип: позитивынй
Входные данные:  файл, содержащий 10 строк "qwerty  qwert\n", курсор ставится в начале четвертой строки
Ожидаемый результат: text == out, где text - данные, перехваченные из std::cout, а out - строки из txt, курсор переместится в начало строки, которая была следующей за той, которую удалили

Тест #2 (begin_text)

Тип: позитивный
Входные данные: файл, содержащий 10 строк "qwerty  qwert\n", курсор ставится в нулевую позицию
Ожидаемый результат: text == out, где text - данные, перехваченные из std::cout, а out - строки из txt, курсор переместится в начало строки, которая была следующей за той, которую удалили

Тест #3 (end_text)

Тип: позитивный
Входные данные: файл, содержащий 10 строк "qwerty  qwert\n", курсор ставится в начале последней строки
Ожидаемый результат: text == out, где text - данные, перехваченные из std::cout, а out - строки из txt, курсор переместится в начало строки, которая была предыдущей перед той, которую удалили

Тест #4 (move_cursor)

Тип: позитивынй
Входные данные: файл, содержащий 10 строк "qwerty  qwert\n", курсор ставится в середине первого слова последней строки
Ожидаемый результат: text == out, где text - данные, перехваченные из std::cout, а out - строки из txt, курсор переместится в середину первого слова строки, которая была предыдущей перед той, которую удалили

Тест #5 (negative_pos)

Тип: негативный 
Входные данные: файл, содержащий 10 строк "qwerty  qwert\n", курсор ставится в середине первого слова девятой строки
Ожидаемый результат: вывод сообщения об ошибке, text == "Invalid arguments\n", где text - данные, перехваченные из std::cerr

Тест #6 (one_string)

Тип: негативный
Входные данные: файл, содержащий 1 строку "\n", курсор ставится в нулевую позицию
Ожидаемый результат: вывод сообщения об ошибке, text == "There are already no any lines in the text!\n", где text - данные, перехваченные из std::cerr

Тест #7 (empty)

Тип: негативный
Входные данные: пустой файл
Ожидаемый результат: вывод сообщения об ошибке, text == "There are already no any lines in the text!\nThere are already no any lines in the text!\n", где text - данные, перехваченные из std::cerr
